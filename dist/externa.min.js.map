{"version":3,"sources":["webpack://externa/webpack/universalModuleDefinition","webpack://externa/external \"debug\"","webpack://externa/external \"machina\"","webpack://externa/webpack/bootstrap","webpack://externa/webpack/runtime/compat get default export","webpack://externa/webpack/runtime/define property getters","webpack://externa/webpack/runtime/hasOwnProperty shorthand","webpack://externa/./src/helpers.js","webpack://externa/./src/state.js","webpack://externa/./src/windowAdapterFsm.js","webpack://externa/./src/logger.js","webpack://externa/./src/ExternaRemoteProxy.js","webpack://externa/./src/inbound.js","webpack://externa/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__264__","__WEBPACK_EXTERNAL_MODULE__682__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createUUID","s","hexDigits","i","substr","Math","floor","random","join","instanceId","isWorker","window","postMessage","location","knownExternals","Map","fsmInstance","_logger","_userHandlers","ExternaRemoteProxy","machina","initialize","options","target","handshakeComplete","logger","msg","initialState","states","uninitialized","disconnect","sendPing","receivePing","ping","sendPong","deferUntilTransition","transition","pinging","_onEnter","payload","type","timeStamp","Date","ticket","state","JSON","stringify","send","receivePong","pong","receiveMessage","sendMessage","ponging","pingData","connected","envelope","handler","message","packingSlips","disconnected","handle","externa","getWindowAdapterFsm","init","ready","pause","data","remote","paused","resume","handleMessage","postMessageListener","event","source","addEventListener","namespace","handlers","debug","console","warn","connect","targets","document","getElementsByTagName","map","contentWindow","parent","push","getExternals","forEach","external","proxy","connectWorker","removeEventListener","resumeUponCompletion","workToBeDone"],"mappings":"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","file":"externa.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"machina\"), require(\"debug\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"machina\", \"debug\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"externa\"] = factory(require(\"machina\"), require(\"debug\"));\n\telse\n\t\troot[\"externa\"] = factory(root[\"machina\"], root[\"debug\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__264__, __WEBPACK_EXTERNAL_MODULE__682__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__682__;","module.exports = __WEBPACK_EXTERNAL_MODULE__264__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\nimport state from \"./state\";\n\nexport function createUUID() {\n\tconst s = [];\n\tconst hexDigits = \"0123456789abcdef\";\n\t/* eslint-disable no-magic-numbers */\n\tfor ( let i = 0; i < 36; i++ ) {\n\t\ts[ i ] = hexDigits.substr( Math.floor( Math.random() * 0x10 ), 1 );\n\t}\n\ts[ 14 ] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\n\t/* jshint ignore:start */\n\ts[ 19 ] = hexDigits.substr( ( s[ 19 ] & 0x3 ) | 0x8, 1 ); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\t/* jshint ignore:end */\n\ts[ 8 ] = s[ 13 ] = s[ 18 ] = s[ 23 ] = \"-\";\n\t/* eslint-enable no-magic-numbers */\n\treturn s.join( \"\" );\n}\n\nexport function getExternals() {\n\tif ( state.isWorker ) {\n\t\treturn [ this, ]; // eslint-disable-line no-invalid-this\n\t}\n\tconst targets = [ ...document.getElementsByTagName( \"iframe\" ), ].map( i => {\n\t\treturn i.contentWindow;\n\t} );\n\tif ( window.parent && window.parent !== window ) {\n\t\ttargets.push( window.parent );\n\t}\n\t// TODO: determine if we need to include workers here?\n\treturn targets;\n}\n","import { createUUID } from \"./helpers\";\n\nexport default {\n\tinstanceId: createUUID(),\n\tisWorker: ( typeof window === \"undefined\" ) && !!postMessage && !!location,\n\tknownExternals: new Map(),\n};\n\n\n","import machina from \"machina\";\nimport { logger } from \"./logger\";\n\nlet fsmInstance;\n\nexport function getWindowAdapterFsm() {\n\tif ( !fsmInstance ) {\n\t\tfsmInstance = new machina.Fsm( {\n\t\t\tinitialize() {\n\t\t\t\tthis.logger = msg => {\n\t\t\t\t\tlogger( `[window-adapter-fsm] ${ msg }` );\n\t\t\t\t};\n\t\t\t},\n\t\t\tinitialState: \"uninitialized\",\n\t\t\tstates: {\n\t\t\t\tuninitialized: {\n\t\t\t\t\tinit: \"ready\",\n\t\t\t\t\t\"externa.message\"() {\n\t\t\t\t\t\tthis.logger( \"externa has not been initialized, but is receiving messages. Be sure to call externa.init().\" );\n\t\t\t\t\t\tthis.deferUntilTransition( \"ready\" );\n\t\t\t\t\t},\n\t\t\t\t\t\"externa.ping\"() {\n\t\t\t\t\t\tthis.logger( \"externa has not been initialized, but is receiving pings. Be sure to call externa.init().\" );\n\t\t\t\t\t\tthis.deferUntilTransition( \"ready\" );\n\t\t\t\t\t},\n\t\t\t\t\t\"externa.pong\"() {\n\t\t\t\t\t\tthis.logger( \"externa has not been initialized, but is receiving pongs. Be sure to call externa.init().\" );\n\t\t\t\t\t\tthis.deferUntilTransition( \"ready\" );\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tready: {\n\t\t\t\t\tpause: \"paused\",\n\t\t\t\t\t\"externa.message\"( { data, remote, } ) {\n\t\t\t\t\t\tthis.logger( \"NORMAL MESSAGE FROM:\", data.instanceId, remote.state );\n\t\t\t\t\t\tremote.receiveMessage( data );\n\t\t\t\t\t},\n\t\t\t\t\t\"externa.ping\"( { data, remote, } ) {\n\t\t\t\t\t\tthis.logger( \"PING MESSAGE FROM:\", data.instanceId, remote.state );\n\t\t\t\t\t\tremote.receivePing( data );\n\t\t\t\t\t\tremote.sendPong( data );\n\t\t\t\t\t},\n\t\t\t\t\t\"externa.pong\"( { data, remote, } ) {\n\t\t\t\t\t\tthis.logger( \"PONG MESSAGE FROM:\", data.instanceId, remote.state );\n\t\t\t\t\t\tremote.receivePong( data );\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpaused: {\n\t\t\t\t\tresume: \"ready\",\n\t\t\t\t\t\"externa.message\"() {\n\t\t\t\t\t\tthis.deferUntilTransition( \"ready\" );\n\t\t\t\t\t},\n\t\t\t\t\t\"externa.ping\"() {\n\t\t\t\t\t\tthis.deferUntilTransition( \"ready\" );\n\t\t\t\t\t},\n\t\t\t\t\t\"externa.pong\"() {\n\t\t\t\t\t\tthis.deferUntilTransition( \"ready\" );\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tinit() {\n\t\t\t\tthis.handle( \"init\" );\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tthis.handle( \"pause\" );\n\t\t\t},\n\n\t\t\tresume() {\n\t\t\t\tthis.handle( \"resume\" );\n\t\t\t},\n\n\t\t\thandleMessage( type, options ) {\n\t\t\t\tthis.handle( type, options );\n\t\t\t},\n\t\t} );\n\t}\n\treturn fsmInstance;\n}\n","import debug from \"debug\";\n\nlet _logger = () => {};\n\nexport function setLogNamespace( namespace ) {\n\t_logger = debug( `externa:${ namespace }` );\n}\n\nexport { _logger as logger };\n","\nimport machina from \"machina\";\nimport { createUUID } from \"./helpers\";\nimport state from \"./state\";\nimport { logger as _logger } from \"./logger\";\n\nlet _userHandlers = {};\n\nexport function setHandlers( handlers ) {\n\t_userHandlers = handlers;\n}\n\nexport { _userHandlers as userHandlers };\n\nconst packingSlips = {\n\tping() {\n\t\treturn {\n\t\t\ttype: \"externa.ping\",\n\t\t\ttimeStamp: new Date(),\n\t\t\tticket: createUUID(),\n\t\t\tinstanceId: state.instanceId,\n\t\t};\n\t},\n\tpong( { instanceId, timeStamp, ticket, } ) {\n\t\treturn {\n\t\t\ttype: \"externa.pong\",\n\t\t\tinstanceId: state.instanceId,\n\t\t\ttimeStamp: new Date(),\n\t\t\tpingData: {\n\t\t\t\tinstanceId,\n\t\t\t\ttimeStamp,\n\t\t\t\tticket,\n\t\t\t},\n\t\t};\n\t},\n\tmessage( type, message ) {\n\t\treturn {\n\t\t\ttype: \"externa.message\",\n\t\t\tinstanceId: state.instanceId,\n\t\t\ttimeStamp: new Date(),\n\t\t\tenvelope: {\n\t\t\t\ttype,\n\t\t\t\tmessage,\n\t\t\t},\n\t\t};\n\t},\n\tdisconnect() {\n\t\treturn {\n\t\t\ttype: \"externa.disconnect\",\n\t\t\ttimeStamp: new Date(),\n\t\t\tinstanceId: state.instanceId,\n\t\t};\n\t},\n};\n\nconst ExternaRemoteProxy = machina.Fsm.extend( {\n\tinitialize( options, target, instanceId ) {\n\t\tthis.target = target;\n\t\tthis.instanceId = instanceId;\n\t\tthis.handshakeComplete = false;\n\t\tthis.logger = msg => {\n\t\t\t_logger( `[remote-proxy] ${ msg }` );\n\t\t};\n\t},\n\n\tinitialState: \"uninitialized\",\n\n\tstates: {\n\t\tuninitialized: {\n\t\t\tdisconnect: \"disconnected\",\n\t\t\tsendPing: \"pinging\",\n\t\t\treceivePing( ping ) {\n\t\t\t\tthis.instanceId = ping.instanceId;\n\t\t\t},\n\t\t\tsendPong() {\n\t\t\t\tthis.deferUntilTransition( \"ponging\" );\n\t\t\t\tthis.transition( \"ponging\" );\n\t\t\t},\n\t\t},\n\t\tpinging: {\n\t\t\t_onEnter() {\n\t\t\t\tconst payload = packingSlips.ping();\n\t\t\t\tthis.logger( `pinging: ${ JSON.stringify( payload ) }` );\n\t\t\t\tthis.send( payload );\n\t\t\t},\n\t\t\tdisconnect: \"disconnected\",\n\t\t\treceivePong( pong ) {\n\t\t\t\tthis.instanceId = pong.instanceId;\n\t\t\t\tthis.handshakeComplete = true;\n\t\t\t\tthis.logger( `completed handshake with ${ this.instanceId }` );\n\t\t\t\tthis.transition( \"connected\" );\n\t\t\t},\n\t\t\treceivePing( ping ) {\n\t\t\t\tthis.instanceId = ping.instanceId;\n\t\t\t},\n\t\t\tsendPong() {\n\t\t\t\tthis.deferUntilTransition( \"ponging\" );\n\t\t\t\tthis.transition( \"ponging\" );\n\t\t\t},\n\t\t\treceiveMessage() {\n\t\t\t\tthis.deferUntilTransition( \"connected\" );\n\t\t\t},\n\t\t\tsendMessage() {\n\t\t\t\tthis.deferUntilTransition( \"connected\" );\n\t\t\t},\n\t\t},\n\t\tponging: {\n\t\t\tsendPong( ping ) {\n\t\t\t\tconst payload = packingSlips.pong( ping );\n\t\t\t\tthis.logger( `ponging: ${ JSON.stringify( payload ) }` );\n\t\t\t\tthis.send( payload );\n\t\t\t\tthis.transition( \"connected\" );\n\t\t\t},\n\t\t},\n\t\tconnected: {\n\t\t\tping: \"pinging\",\n\t\t\tdisconnect: \"disconnected\",\n\t\t\treceiveMessage( envelope ) {\n\t\t\t\tthis.logger( `received message from ${ this.instanceId } ${ JSON.stringify( envelope ) }` );\n\t\t\t\tconst handler = _userHandlers[ envelope.type ];\n\t\t\t\tif ( handler ) {\n\t\t\t\t\thandler( envelope.message );\n\t\t\t\t} else {\n\t\t\t\t\tthis.logger( `no user handler for: ${ JSON.stringify( envelope ) }` );\n\t\t\t\t}\n\t\t\t},\n\t\t\tsendMessage( type, msg ) {\n\t\t\t\tconst payload = packingSlips.message( type, msg );\n\t\t\t\tthis.logger( `sending msg: ${ JSON.stringify( payload ) }` );\n\t\t\t\tthis.send( payload );\n\t\t\t},\n\t\t},\n\t\tdisconnected: {\n\t\t\t_onEnter() {\n\t\t\t\tconst payload = packingSlips.disconnect();\n\t\t\t\tthis.logger( `sending disconnect: ${ JSON.stringify( payload ) }` );\n\t\t\t\tthis.send( payload );\n\t\t\t},\n\t\t},\n\t},\n\n\tsendPing() {\n\t\tthis.handle( \"sendPing\" );\n\t},\n\n\treceivePing( ping ) {\n\t\tthis.handle( \"receivePing\", ping );\n\t},\n\n\tsendPong( ping ) {\n\t\tthis.handle( \"sendPong\", ping );\n\t},\n\n\treceivePong( pong ) {\n\t\tthis.handle( \"receivePong\", pong );\n\t},\n\n\tsendMessage( type, msg ) {\n\t\tthis.handle( \"sendMessage\", type, msg );\n\t},\n\n\treceiveMessage( { envelope, } ) {\n\t\tthis.handle( \"receiveMessage\", envelope );\n\t},\n\n\tsend( payload ) {\n\t\tthis.target.postMessage( {\n\t\t\texterna: true,\n\t\t\tpayload,\n\t\t} );\n\t},\n\n\tdisconnect() {\n\t\tthis.handle( \"disconnect\" );\n\t},\n} );\n\nexport { ExternaRemoteProxy };\n","\nimport state from \"./state\";\nimport { ExternaRemoteProxy } from \"./ExternaRemoteProxy\";\nimport { getWindowAdapterFsm } from \"./windowAdapterFsm\";\nimport { logger } from \"./logger\";\n\nexport function postMessageListener( event ) {\n\tif ( event.data.externa ) {\n\t\tconst source = event.source;\n\t\tconst payload = event.data.payload;\n\t\tlet remote = state.knownExternals.get( source );\n\t\tif ( !remote ) {\n\t\t\tlogger( `received externa message from unknown source: ${ payload.instanceId }` );\n\t\t\tremote = new ExternaRemoteProxy( {}, source, payload.instanceId );\n\t\t\tstate.knownExternals.set( source, remote );\n\t\t}\n\t\tgetWindowAdapterFsm().handleMessage( payload.type, { data: payload, remote, } );\n\t}\n}\n","\nimport { postMessageListener } from \"./inbound\";\nimport state from \"./state\";\nimport { getExternals } from \"./helpers\";\nimport { ExternaRemoteProxy, setHandlers } from \"./ExternaRemoteProxy\";\nimport { getWindowAdapterFsm } from \"./windowAdapterFsm\";\nimport { setLogNamespace, logger } from \"./logger\";\n\nwindow.addEventListener( \"message\", postMessageListener );\n\nexport default {\n\tknownExternals: state.knownExternals,\n\n\tinit( options ) {\n\t\tstate.instanceId = options.instanceId || state.instanceId;\n\t\tsetLogNamespace( state.instanceId );\n\t\tlogger( \"initializing\" );\n\t\tif ( options.handlers ) {\n\t\t\tsetHandlers( options.handlers );\n\t\t} else {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn( \"externa has not been configured with user handlers, so no inbound messages will be handled\" );\n\t\t}\n\t\tgetWindowAdapterFsm().init();\n\t},\n\n\tconnect() {\n\t\tlogger( \"connecting\" );\n\t\tgetExternals().forEach( external => {\n\t\t\tlet proxy = state.knownExternals.get( external );\n\t\t\tif ( !proxy ) {\n\t\t\t\tproxy = new ExternaRemoteProxy( {}, external );\n\t\t\t\tstate.knownExternals.set( external, proxy );\n\t\t\t}\n\t\t\tproxy.sendPing();\n\t\t} );\n\t},\n\n\t// Intentionally not yet implemented\n\tconnectWorker() {},\n\n\tdisconnect() {\n\t\tlogger( \"disconnecting\" );\n\t\twindow.removeEventListener( \"message\", postMessageListener );\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tfor ( const [ key, external, ] of state.knownExternals ) {\n\t\t\texternal.disconnect();\n\t\t}\n\t\tstate.knownExternals.clear();\n\t},\n\n\tasync resumeUponCompletion( workToBeDone ) {\n\t\t// TODO: throw here if FSM is not in ready state\n\t\tgetWindowAdapterFsm().pause();\n\t\tawait workToBeDone();\n\t\tgetWindowAdapterFsm().resume();\n\t},\n\n\tsendMessage( type, msg ) {\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tfor ( const [ key, external, ] of state.knownExternals ) {\n\t\t\texternal.sendMessage( type, msg );\n\t\t}\n\t},\n};\n"],"sourceRoot":""}